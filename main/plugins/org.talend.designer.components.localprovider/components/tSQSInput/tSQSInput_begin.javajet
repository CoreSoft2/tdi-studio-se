<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
	java.util.List
	java.util.Map
" 
%>
	<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    String queueUrl = ElementParameterParser.getValue(node,"__QUEUE_URL__");
    boolean visibilityTimeout = "true".equals(ElementParameterParser.getValue(node,"__VISIBILITY_TIMEOUT__"));
    boolean isCustomeWaitTime = "true".equals(ElementParameterParser.getValue(node,"__CUSTOME_WAIT_TIME__"));
    boolean deleteMessages = "true".equals(ElementParameterParser.getValue(node,"__DELETE_MESSAGE__"));
    boolean readAllMessages = "true".equals(ElementParameterParser.getValue(node,"__READ_ALL_MESSAGE__"));
    boolean getAttributes = "true".equals(ElementParameterParser.getValue(node,"__GET_ATTRIBUTES__"));
    boolean getMessageAttributes = "true".equals(ElementParameterParser.getValue(node,"__GET_MESSAGE_ATTRIBUTES__"));
    boolean dieOnError = "true".equals(ElementParameterParser.getValue(node,"__DIE_ON_ERROR__"));
    
    String visibilityTimeoutValue = ElementParameterParser.getValue(node,"__VISIBILITY_TIMEOUT_VALUE__");
    String waitTime = ElementParameterParser.getValue(node,"__WAIT_TIME__");
	%>
	<%@ include file="../tSQSConnection/SQSClient.javajet" %>
	
	int nbline_<%=cid %> = 0;
	
	try{
		<%
		if(isLog4jEnabled){
		%>	
			log.info("<%=cid%> - Receiving messages from :" + <%=queueUrl%>);
		<%
		}
		%>
		com.amazonaws.services.sqs.model.ReceiveMessageRequest <%=cid%>_receiveMessageRequest = new com.amazonaws.services.sqs.model.ReceiveMessageRequest(<%=queueUrl%>).withMaxNumberOfMessages(10);
		<%
		if (visibilityTimeout){
		%>	
			 <%=cid%>_receiveMessageRequest.setVisibilityTimeout(<%=visibilityTimeoutValue%>);
		<%
		}
		if (isCustomeWaitTime){
		%>	
			 <%=cid%>_receiveMessageRequest.setWaitTimeSeconds(<%=waitTime%>);
		<%
		}
		%>
		
		List<com.amazonaws.services.sqs.model.Message> <%=cid%>_messages = null;
		<%
			if (deleteMessages && readAllMessages){
				if (getAttributes && getMessageAttributes){
		%>
    				while ((<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest.withAttributeNames("All").withMessageAttributeNames("All")).getMessages()).size() >0 ) {
 		<%
 				}else if (getAttributes){
 		%>
 					while ((<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest.withAttributeNames("All")).getMessages()).size() >0 ) {
 		<%	
 				} else if (getMessageAttributes){
 		%>
 					while ((<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest.withMessageAttributeNames("All")).getMessages()).size() >0 ) {
 		<%
 				}else {
 		%>
 					while ((<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest).getMessages()).size() >0 ) {
 		<%
 				}
 			}
 			else
 			{
 				if (getAttributes && getMessageAttributes){
 		%>
 					<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest.withAttributeNames("All").withMessageAttributeNames("All")).getMessages();
 		<%
 				} else if (getAttributes){
 		%>
 					<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest.withAttributeNames("All")).getMessages();
 		<%
 				} else if (getMessageAttributes){
 		%>
 					<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest.withMessageAttributeNames("All")).getMessages();
 		<%
 				} else {
 		%>
 					<%=cid%>_messages = conn_<%=cid%>.receiveMessage(<%=cid%>_receiveMessageRequest).getMessages();
 		<%	
 				}
 			}
 		%>
 			for (com.amazonaws.services.sqs.model.Message <%=cid%>_message : <%=cid%>_messages) {
 				nbline_<%=cid %>++;
		
